{"version":3,"sources":["webpack:///./src/app/example/example.module.ts","webpack:///./src/app/example/example.page.html","webpack:///./src/app/example/example.page.scss","webpack:///./src/app/example/example.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,mQ;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACEyD;AAOzD;IAKE;IAAgB,CAAC;IAEjB,8BAAQ,GAAR,cAAgB,OAAO,CAAC,GAAG,CAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IAE3C,iCAAW,GAAX,cAAgB,OAAO,CAAC,GAAG,CAAE,aAAa,CAAC,CAAC,CAAC,CAAC;IAE9C,+BAAS,GAAT,cAAc,OAAO,CAAC,GAAG,CAAE,WAAW,CAAC,CAAC,CAAC,CAAC;IAE1C,wCAAkB,GAAlB,cAAuB,OAAO,CAAC,GAAG,CAAE,oBAAoB,CAAC,CAAC,CAAE,CAAC;IAE7D,2CAAqB,GAArB,cAA0B,OAAO,CAAC,GAAG,CAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC;IAElE,qCAAe,GAAf,cAAoB,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAEtD,wCAAkB,GAAlB,cAAuB,OAAO,CAAC,GAAG,CAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAE5D,oCAAc,GAAd;QACE,SAAS;QACT,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChC,CAAC;IAED,sCAAgB,GAAhB;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,qCAAe,GAAf;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC;IAED,sCAAgB,GAAhB;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,qCAAe,GAAf;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC;IAED,uCAAiB,GAAjB;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;IAED,qCAAe,GAAf;QACE,qBAAqB;QACrB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qCAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IA5DU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,WAAW,CA8DvB;IAAD,kBAAC;CAAA;AA9DuB","file":"example-example-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExamplePage } from './example.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamplePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExamplePage]\n})\nexport class ExamplePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>example</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy, DoCheck,\n  AfterContentInit, AfterContentChecked,\n  AfterViewInit, AfterViewChecked } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class ExamplePage implements OnInit, DoCheck,\nAfterContentInit, AfterContentChecked,\nAfterViewInit, AfterViewChecked,\nOnDestroy  {\n\n  constructor() { }\n\n  ngOnInit()    { console.log ('ngOnInit'); }\n\n  ngOnDestroy() { console.log ('ngOnDestroy'); }\n\n  ngDoCheck() { console.log ('ngDoCheck'); }\n\n  ngAfterContentInit() { console.log ('ngAfterContentInit');  }\n\n  ngAfterContentChecked() { console.log ('ngAfterContentChecked'); }\n\n  ngAfterViewInit() { console.log ('ngAfterViewInit'); }\n\n  ngAfterViewChecked() { console.log ('ngAfterViewChecked'); }\n\n  ionViewDidLoad() {\n    // sqlite\n    console.log('ionViewDidLoad');\n  }\n\n  ionViewWillEnter() {\n    // sincrono - cuidado\n    console.log('ionViewWillEnter');\n  }\n\n  ionViewDidEnter() {\n    // sincrono - cuidado\n    console.log('ionViewDidEnter');\n  }\n\n  ionViewWillLeave() {\n    // sincrono - cuidado\n    console.log('ionViewWillLeave');\n  }\n\n  ionViewDidLeave() {\n    // sincrono - cuidado\n    console.log('ionViewDidLeave');\n  }\n\n  ionViewWillUnload() {\n    // sincrono - cuidado\n    console.log('ionViewWillUnload');\n  }\n\n  ionViewCanEnter(): boolean {\n    // sincrono - cuidado\n    console.log('ionViewCanEnter');\n    return true;\n  }\n\n  ionViewCanLeave(): boolean {\n    console.log('ionViewCanLeave');\n    return true;\n  }\n\n}\n"],"sourceRoot":""}